{"version":3,"sources":["components/Navbar.js","components/ClearTextModal.js","components/Preview.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","aria-current","style","color","title","type","role","id","onChange","modeClick","checked","theme","for","defaultProps","ClearTextModal","handleCloseBtn","setShowClearTextModal","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","aria-hidden","display","clearTextModal","background","onClick","data-bs-dismiss","aria-label","data-bs-toggle","data-bs-placement","data-bs-custom-class","clearTextFunc","Preview","previewStyles","border","concat","borderRadius","padding","width","height","backgroundColor","overflow","handleClosePreview","textValue","Textform","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setTextvalue","_React$useState3","_React$useState4","fontSizeINputVal","_React$useState5","_React$useState6","showPreview","setShowPreview","_React$useState7","_React$useState8","activeBold","setActiveBold","_React$useState9","_React$useState10","activeItalic","setActiveItalic","_React$useState11","textVal","btnColor","_React$useState12","copyBtn","setcopyBtn","_React$useState13","_React$useState14","showClearTextModal","styles","transition","marginTop","marginBottom","_React$useState15","fontSize","_React$useState16","textStyles","setTextStyles","fontSizesArr","i","el","push","j","newEl","k","newEl2","handleFontSize","e","oldStyles","objectSpread","parseInt","target","textContent","handleTextAlign","alignVal","textAlign","filter","size","Fragment","aria-expanded","disabled","length","oldText","toUpperCase","toLowerCase","string","charAt","slice","map","key","fontWeight","data-bs-custom-classname","fontStyle","navigator","clipboard","writeText","oldCopyBtn","setTimeout","rows","value","split","preventDefault","App","setMode","currentTheme","localStorage","getItem","document","body","classList","add","components_Navbar","oldState","toggle","contains","setItem","components_Textform","heading","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"wKAIA,SAASA,EAAOC,GACZ,OACIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,eAAa,OAAQC,MAAO,CAACC,MAAO,YAAaP,EAAMQ,OAcrFP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBK,KAAK,WAAWC,KAAK,SAASC,GAAG,yBACrEC,SAAUZ,EAAMa,UAAWC,QAAyB,SAAhBd,EAAMe,QAC1Cd,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBY,IAAI,yBAAyBV,MAAO,CAACC,MAAuB,SAAhBP,EAAMe,MAAmB,YAAc,WAA4B,SAAhBf,EAAMe,MAAmB,SAAM,cAUtLhB,EAAOkB,aAAe,CAClBT,MAAO,cAGIT,eCtCA,SAASmB,EAAelB,GAEnC,SAASmB,IACLnB,EAAMoB,uBAAsB,GAGlC,OAAQnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQO,GAAG,iBAClCU,mBAAiB,SAASC,mBAAiB,QAC3CC,UAAW,EAAGC,kBAAgB,sBAAsBC,cAAY,OAChEnB,MAAO,CAACoB,QAAS1B,EAAM2B,eAAiB,QAAU,OAAQC,WAAY5B,EAAM2B,eAAiB,iBAAmB,KAChH1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAA4BE,MAAO,CAACC,MAAO,QAA3D,WACAN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,SACAH,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,mBAAmByB,QAASV,EAAgBW,kBAAgB,QAAQC,aAAW,WAEjH9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,sDAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,2BAA2ByB,QAASV,EAAgBW,kBAAgB,SAApG,UACA7B,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASL,UAAU,yBAAyB4B,iBAAe,UAAUC,oBAAkB,MACpGC,uBAAqB,iBACrB1B,MAAM,aAAaqB,QAAS7B,EAAMmC,eAFlC,cCtBO,SAASC,EAAQpC,GAE9B,IAAIqC,EAAgB,CAClBC,OAAM,aAAAC,OAA+B,SAAhBvC,EAAMe,MAAmB,UAAY,QAC1DyB,aAAc,MACdC,QAAS,OACTC,MAAO,OACPC,OAAQ,yBACRC,gBAAiB,OACjBC,SAAU,QAGZ,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDAAgDE,MAAO,CAACoC,MAAO,OAAQD,QAAS,WAC5FxC,EAAAC,EAAAC,cAAA,UACGM,KAAK,SACLoB,QAAS7B,EAAM8C,mBACfxC,MAAO,CAACsB,WAAY,OAAQU,OAAQ,SAEpCrC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAA4BE,MAAO,CAACC,MAAO,SAA3D,WAGNN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA6BE,MAAO+B,GAC5B,KAApBrC,EAAM+C,UAAmB,qBAAuB/C,EAAM+C,YCmThDC,MAzUf,SAAkBhD,GAgChB,IAhCuB,IAAAiD,EACWC,IAAMC,SAAS,2BAD1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAChBF,EADgBK,EAAA,GACLG,EADKH,EAAA,GAAAI,EAEyBN,IAAMC,SAAS,MAFxCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEhBE,EAFgBD,EAAA,GAAAE,GAAAF,EAAA,GAGeP,IAAMC,UAAS,IAH9BS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGhBE,EAHgBD,EAAA,GAGHE,EAHGF,EAAA,GAAAG,EAIab,IAAMC,UAAS,GAJ5Ba,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAIhBE,EAJgBD,EAAA,GAIJE,EAJIF,EAAA,GAAAG,EAKiBjB,IAAMC,UAAS,GALhCiB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAKhBE,EALgBD,EAAA,GAKFE,EALEF,EAAA,GAAAG,EAMOrB,IAAMC,SAAS,CAC3CqB,QAAS,YACTC,SAAU,UARWC,EAAArB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAMhBI,EANgBD,EAAA,GAMPE,EANOF,EAAA,GAAAG,EAU6B3B,IAAMC,UAAS,GAV5C2B,EAAAzB,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GAUhBE,EAVgBD,EAAA,GAUI1D,EAVJ0D,EAAA,GAYnBE,EAAS,CACXpC,gBAAiC,SAAhB5C,EAAMe,MAAmB,UAAY,GACtDR,MAAuB,SAAhBP,EAAMe,MAAmB,QAAU,GAC1CkE,WAAY,kBACZzC,aAAc,MACd0C,UAAW,QACXC,aAAc,QAlBOC,EAqBalC,IAAMC,SAAS,CAACkC,SAAU,KArBvCC,EAAAjC,OAAAC,EAAA,EAAAD,CAAA+B,EAAA,GAqBhBG,EArBgBD,EAAA,GAqBJE,EArBIF,EAAA,GA+BnBG,EAAe,GACVC,EAAI,EAAGA,GAAK,GAAIA,GAAI,EAAG,CAC9B,IAAMC,EAAKD,EAEX,GADAD,EAAaG,KAAKD,GACR,KAAPA,EACD,IAAK,IAAIE,EAAIF,EAAIE,GAAK,GAAIA,GAAK,EAAG,CAChC,IAAMC,EAAQD,EAEd,GADAJ,EAAaG,KAAKE,GACL,KAAVA,EACD,IAAK,IAAIC,EAAID,EAAOC,GAAK,GAAIA,GAAI,EAAG,CAClC,IAAMC,EAASD,EACfN,EAAaG,KAAKI,KAmG5B,SAASC,EAAeC,GACtBV,EAAc,SAACW,GACb,OAAO9C,OAAA+C,EAAA,EAAA/C,CAAA,GAAI8C,EAAX,CAAsBd,SAAUgB,SAASH,EAAEI,OAAOC,iBAItD,SAASC,EAAgBC,GACvBjB,EAAc,SAACW,GACb,OAAO9C,OAAA+C,EAAA,EAAA/C,CAAA,GAAI8C,EAAX,CAAsBO,UAAWD,MAIrC,OAxGoBhB,EAAakB,OAAO,SAACC,GAAD,OAAUA,IAyGhD3G,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2G,SAAA,KACG9B,GAAsB9E,EAAAC,EAAAC,cAACe,EAAD,CAAgBS,eAAgBT,EACvDE,sBAAuBA,EAAuBe,cA3DlD,WACEoB,EAAa,OA2DVM,EAAc5D,EAAAC,EAAAC,cAACiC,EAAD,CAASU,mBApD5B,WACEgB,GAAe,IAmDmD/C,MAAOf,EAAMe,MAAMgC,UAAWA,IAC9F9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBE,MAAO0E,GAC1C/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0EACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6FAClBK,KAAK,SAASE,GAAG,sBAAsBqB,iBAAe,WAAW8E,gBAAc,QAAQC,SAA+B,IAArBhE,EAAUiE,QACzG/G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,gBAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBoB,kBAAgB,8BAC5CvB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACV4B,iBAAe,UACfxB,MAAM,gBACNqB,QAzHlB,WACE0B,EAAa,SAAC0D,GACZ,OAAOA,EAAQC,iBAwHDH,SAA+B,IAArBhE,EAAUiE,QALtB,cAUF/G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACVyB,QA7HlB,WACE0B,EAAa,SAAC0D,GACZ,OAAOA,EAAQE,iBA4HDJ,SAA+B,IAArBhE,EAAUiE,QAHtB,cAQF/G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACV4B,iBAAe,UACfxB,MAAM,gBACNqB,QA9HlB,WACE0B,EAAa,SAAC0D,GACZ,OAN4BG,EAMCH,GALjBI,OAAO,GAAGH,cAAgBE,EAAOE,MAAM,GADvD,IAAgCF,KAmIdL,SAA+B,IAArBhE,EAAUiE,QALtB,iBAYN/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBE,MAAO,CAACoC,MAAO,SAKrDzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yFAClBK,KAAK,SAASuB,iBAAe,WAAW8E,gBAAc,QAAQC,SAA+B,IAArBhE,EAAUiE,QAChF/G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,gCAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kCAAkCE,MAAO,CAACqC,OAAQ,QAASE,SAAU,SACnF5C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAuB2G,UAAQ,IAAuB,IAArBrD,EAA4BA,EAAmB6B,EAAWF,UACzGpF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACfqF,EAAa8B,IAAI,SAACX,EAAMjG,GACvB,OAAOV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDAAoDoH,IAAK7G,GAC7EV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgByB,QAASoE,GAA0B,KAATW,EAAA,GAAArE,OAAiBqE,EAAjB,cAAoCA,GAC5F3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOE,MAAO,CAACC,MAAO,cAClCgF,EAAWF,WAAauB,EAAO,SAAM,SAMhD3G,EAAAC,EAAAC,cAAA,UACEC,UAAS,kCACTyB,QAnHZ,WACEqC,EAAc,SAAC+C,GACb,OAAQA,IAEVzB,EAAc,SAACW,GACb,OAAO9C,OAAA+C,EAAA,EAAA/C,CAAA,GAAI8C,EAAX,CAAsBsB,WAAYxD,EAAa,OAAS,cA+GhD8C,SAA+B,IAArBhE,EAAUiE,OACpBhF,iBAAe,UAAUC,oBAAkB,MAC3CyF,2BAAyB,iBACzBlH,MAAM,cAENP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,gBAEFH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kCACVyB,QApHZ,WACEyC,EAAgB,SAAC2C,GACf,OAAQA,IAEVzB,EAAc,SAACW,GACb,OAAO9C,OAAA+C,EAAA,EAAA/C,CAAA,GAAI8C,EAAX,CAAsBwB,UAAWtD,EAAe,SAAW,cAgHnD0C,SAA+B,IAArBhE,EAAUiE,OACpBhF,iBAAe,UAAUC,oBAAkB,MAC3CyF,2BAAyB,iBACzBlH,MAAM,gBAENP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,kBAEFH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kCACVyB,QAAS,WAAO2E,EAAgB,SAChCO,SAA+B,IAArBhE,EAAUiE,OACpBhF,iBAAe,UAAUC,oBAAkB,MAC3CyF,2BAAyB,iBACzBlH,MAAM,oBAENP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,sBAEFH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kCACVyB,QAAS,WAAO2E,EAAgB,UAChCO,SAA+B,IAArBhE,EAAUiE,OACpBhF,iBAAe,UAAUC,oBAAkB,MAC3CyF,2BAAyB,iBACzBlH,MAAM,qBAENP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,uBAEFH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kCACVyB,QAAS,WAAO2E,EAAgB,WAChCO,SAA+B,IAArBhE,EAAUiE,OACpBhF,iBAAe,UAAUC,oBAAkB,MAC3CyF,2BAAyB,iBACzBlH,MAAM,sBAENP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,wBAEFH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kCACVyB,QAAS,WAAO2E,EAAgB,YAChCO,SAA+B,IAArBhE,EAAUiE,OACpBhF,iBAAe,UAAUC,oBAAkB,MAC3CyF,2BAAyB,iBACzBlH,MAAM,uBAENP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,yBAEFH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kCACVyB,QAvLZ,WACEiC,GAAe,IAuLLiD,SAA+B,IAArBhE,EAAUiE,OACpBhF,iBAAe,UAAUC,oBAAkB,MAC3CyF,2BAAyB,iBACzBlH,MAAM,WAENP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,YAEFH,EAAAC,EAAAC,cAAA,UACEC,UAAS,kBAAAmC,OAAoBoC,EAAQF,SAA5B,eACTsC,SAA+B,IAArBhE,EAAUiE,OACpBnF,QAhNZ,WACE+F,UAAUC,UAAUC,UAAU/E,GAX9B6B,EAAW,SAACmD,GACV,OAAO1E,OAAA+C,EAAA,EAAA/C,CAAA,GAAK0E,EAAZ,CAAwBvD,QAAS,SAAUC,SAAU,cAEvDuD,WAAW,WACTpD,EAAW,SAACmD,GACV,OAAO1E,OAAA+C,EAAA,EAAA/C,CAAA,GAAK0E,EAAZ,CAAwBvD,QAAS,YAAaC,SAAU,aAEzD,MAoNOzC,iBAAe,UAAUC,oBAAkB,MAC3CyF,2BAAyB,iBACzBlH,MAAM,sBAENP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,mBAINH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACEC,UAAU,eACVO,GAAG,aACHsH,KAAK,KACLC,MAAOnF,EACPnC,SA9OV,SAAgCsF,GAC9B3C,EAAa2C,EAAEI,OAAO4B,QA8Od5H,MAAOiF,KAGXtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oEACXH,EAAAC,EAAAC,cAAA,SACG4C,EAAUoF,MAAM,OAAOxB,OAAO,SAACT,GAAD,OAAOA,IAAGc,OAD3C,aAC6D,IAC1DjE,EAAUiE,OAFb,UAIA/G,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASsG,SAA+B,IAArBhE,EAAUiE,OAAcnF,QAnOlE,SAA8BqE,GAC5BA,EAAEkC,iBACFhH,GAAsB,IAkOdhB,UAAU,mFACRH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,kBC9QCiI,MA5Cf,WAAe,IAAApF,EAEWC,IAAMC,UAAS,GAF1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEAqF,GAFAlF,EAAA,GAAAA,EAAA,IAIPmF,EAAeC,aAAaC,QAAQ,SAyB1C,MAvBqB,SAAjBF,GACFG,SAASC,KAAKC,UAAUC,IAAI,cAuB1B5I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC2I,EAAD,CAAQtI,MAAM,aAAaK,UAdjC,WACIyH,EAAQ,SAACS,GACP,OAAQA,IAEVL,SAASC,KAAKC,UAAUI,OAAO,cAC/B,IAAIjI,EAAQ,QACR2H,SAASC,KAAKC,UAAUK,SAAS,gBACnClI,EAAQ,QAEVyH,aAAaU,QAAQ,QAASnI,IAKsBA,MAAOwH,IACzDtI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAACgJ,EAAD,CAAUC,QAAQ,gBAAgBrI,MAAOwH,OChClCc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAtD,EAAA,GAAAuD,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCADW,IAASC,WAAWxB,SAASyB,eAAe,SACpDC,OACHnK,EAAAC,EAAAC,cAACF,EAAAC,EAAMmK,WAAP,KAEGpK,EAAAC,EAAAC,cAACmK,EAAD,QAQLjB","file":"static/js/main.e455049d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n    return ( \r\n        <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-brand\" aria-current=\"page\"  style={{color: '#90B8F8'}}>{props.title}</div>\r\n                {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button> */}\r\n                {/* <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/textform\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div> */}\r\n                <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" \r\n                    onChange={props.modeClick} checked={props.theme === 'dark'}/>\r\n                    <label className=\"form-check-label\" for=\"flexSwitchCheckChecked\" style={{color: props.theme === 'dark' ? 'lightblue' : 'yellow'}}>{props.theme === 'dark' ? '☁' : '☀'}</label>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"title here\"\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\n\r\nexport default function ClearTextModal(props) {\r\n\r\n    function handleCloseBtn() {\r\n        props.setShowClearTextModal(false)\r\n    }\r\n\r\n  return (<div className=\"modal\" id=\"staticBackdrop\" \r\n  data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" \r\n  tabIndex={-1} aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\" \r\n  style={{display: props.clearTextModal ? 'block' : 'none', background: props.clearTextModal ? 'rgba(0,0,0,.8)' : ''}}>\r\n  <div className=\"modal-dialog modal-dialog-centered\">\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header\">\r\n        <span className=\"material-symbols-outlined\" style={{color: 'red'}}>warning</span>\r\n        <h5 className=\"modal-title\">Alert</h5>\r\n        <button type=\"button\" className=\"btn-close btn-sm\" onClick={handleCloseBtn} data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <p>All your work in textarea will be clear!</p>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={handleCloseBtn} data-bs-dismiss=\"modal\">Don't!</button>\r\n        <button type=\"button\" className=\"btn btn-primary btn-sm\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n        data-bs-custom-class=\"custom-tooltip\"\r\n        title=\"Clear all.\" onClick={props.clearTextFunc}>Do it!</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Preview(props) {\r\n\r\n  let previewStyles = {\r\n    border: `2px solid ${props.theme === \"dark\" ? \"#5F85DB\" : \"#111\"}`,\r\n    borderRadius: \"5px\",\r\n    padding: \"10px\",\r\n    width: '100%',\r\n    height: '-webkit-fill-available',\r\n    backgroundColor: '#fff',\r\n    overflow: 'auto',\r\n  };\r\n\r\n  return (\r\n    <div className=\"previewBox\">\r\n      <div className='d-flex justify-content-end align-items-center' style={{width: '100%', padding: '0 10px'}}>\r\n         <button\r\n            type=\"button\"\r\n            onClick={props.handleClosePreview}\r\n            style={{background: 'none', border: 'none'}}\r\n          >\r\n            <span className=\"material-symbols-outlined\" style={{color: \"#111\"}}>close</span>\r\n          </button>\r\n      </div>\r\n      <div className=\"container my-2 previewText\" style={previewStyles}>\r\n        {props.textValue === \"\" ? \"NO TEXT TO PREVIEW\" : props.textValue}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport ClearTextModal from \"./ClearTextModal\";\r\nimport Preview from \"./Preview\";\r\n\r\nfunction Textform(props) {\r\n  const [textValue, setTextvalue] = React.useState(\"Enter your text here...\");\r\n  const [fontSizeINputVal, setFontSizeINputVal] = React.useState(null);\r\n  const [showPreview, setShowPreview] = React.useState(false);\r\n  const [activeBold, setActiveBold] = React.useState(false)\r\n  const [activeItalic, setActiveItalic] = React.useState(false)\r\n  const [copyBtn, setcopyBtn] = React.useState({\r\n    textVal: \"Copy Text\",\r\n    btnColor: \"light\",\r\n  });\r\n  const [showClearTextModal, setShowClearTextModal] = React.useState(false)\r\n\r\n  let styles = {\r\n    backgroundColor: props.theme === \"dark\" ? \"#353941\" : \"\",\r\n    color: props.theme === \"dark\" ? \"white\" : \"\",\r\n    transition: \"all 0.3s linear\",\r\n    borderRadius: \"5px\",\r\n    marginTop: \"100px\",\r\n    marginBottom: \"50px\"\r\n  };\r\n\r\n  const [textStyles, setTextStyles] = React.useState({fontSize: 16})\r\n\r\n  /*let textValArr = textValue.split(' ')\r\n  React.useEffect(() => {\r\n    textValArr.forEach((text) => {    \r\n      text.addEventListener('dblclick', function(e) {\r\n        console.log(e.target)\r\n      })\r\n    })\r\n  })*/\r\n  let fontSizesArr = []\r\n  for (let i = 8; i <= 14; i=i+6) {\r\n    const el = i;\r\n    fontSizesArr.push(el)\r\n    if(el === 14){\r\n      for (let j = el; j <= 28; j= j+2) {\r\n        const newEl = j\r\n        fontSizesArr.push(newEl)\r\n        if(newEl === 28){\r\n          for (let k = newEl; k <= 36; k=k+8) {\r\n            const newEl2 = k;\r\n            fontSizesArr.push(newEl2)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const filterSizes = fontSizesArr.filter((size) => size)\r\n\r\n  function handleUpClick() {\r\n    setTextvalue((oldText) => {\r\n      return oldText.toUpperCase();\r\n    });\r\n  }\r\n  function handleLowClick() {\r\n    setTextvalue((oldText) => {\r\n      return oldText.toLowerCase();\r\n    });\r\n  }\r\n\r\n  function capitalizeFirstLetter (string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  function handleCapitalClick() {\r\n    setTextvalue((oldText) => {\r\n      return capitalizeFirstLetter(oldText)\r\n    })\r\n  } \r\n\r\n  function handleOnChangeTextArea(e) {\r\n    setTextvalue(e.target.value);\r\n  }\r\n\r\n  function showcopyBtn() {\r\n    setcopyBtn((oldCopyBtn) => {\r\n      return { ...oldCopyBtn, textVal: \"Copied\", btnColor: \"success\" };\r\n    });\r\n    setTimeout(() => {\r\n      setcopyBtn((oldCopyBtn) => {\r\n        return { ...oldCopyBtn, textVal: \"Copy Text\", btnColor: \"light\" };\r\n      });\r\n    }, 2000);\r\n  }\r\n\r\n  function copyText() {\r\n    navigator.clipboard.writeText(textValue);\r\n    showcopyBtn();\r\n  }\r\n\r\n  function handleclearTextModal(e) {\r\n    e.preventDefault()\r\n    setShowClearTextModal(true)\r\n  }\r\n\r\n  function clearText() {\r\n    setTextvalue(\"\");\r\n  }\r\n\r\n  function handlePreview() {\r\n    setShowPreview(true);\r\n  }\r\n\r\n  function handleClosePreview() {\r\n    setShowPreview(false);\r\n  }\r\n\r\n  function handleBold() {\r\n    setActiveBold((oldText) => {\r\n      return !oldText;\r\n    });\r\n    setTextStyles((oldStyles) => {\r\n      return {...oldStyles, fontWeight: activeBold ? 'bold' : 'normal'}\r\n    })\r\n  }\r\n\r\n  function handleItalic() {\r\n    setActiveItalic((oldText) => {\r\n      return !oldText;\r\n    });\r\n    setTextStyles((oldStyles) => {\r\n      return {...oldStyles, fontStyle: activeItalic ? 'italic' : 'normal'}\r\n    })\r\n  }\r\n\r\n  // function handleFontSizeChange(e) {\r\n  //   setFontSizeINputVal(e.target.value)\r\n  //   if(isNaN(e.target.value) || \r\n  //     e.target.value === NaN ) {\r\n  //     setTextStyles((oldStyles) => {\r\n  //       return {...oldStyles, fontSize:  parseInt(e.target.value)}\r\n  //     })\r\n  //   } else if(e.target.value < 8 || e.target.value > 72 || e.target.value === 0) {\r\n  //     setTextStyles((oldStyles) => {\r\n  //       return {...oldStyles, fontSize: 16}\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  function handleFontSize(e) {\r\n    setTextStyles((oldStyles) => {\r\n      return {...oldStyles, fontSize: parseInt(e.target.textContent)}\r\n    })\r\n  }\r\n\r\n  function handleTextAlign(alignVal) {\r\n    setTextStyles((oldStyles) => {\r\n      return {...oldStyles, textAlign: alignVal}\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showClearTextModal && <ClearTextModal clearTextModal={ClearTextModal} \r\n      setShowClearTextModal={setShowClearTextModal} clearTextFunc={clearText}/>}\r\n      {showPreview ? <Preview handleClosePreview={handleClosePreview} theme={props.theme}textValue={textValue}/> :\r\n      <div className=\"container px-4 py-2\" style={styles}>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <div className=\"actionBtns d-flex justify-content-between align-items-center flex-wrap\">\r\n            <div className=\"btn-group\">\r\n              <button className=\"btn btn-light btn-sm d-flex justify-content-between align-items-center m-2 dropdown-toggle\" \r\n              type=\"button\" id=\"dropdownMenuButton2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" disabled={textValue.length === 0}>\r\n                <span className=\"material-symbols-outlined\">text_format</span>\r\n              </button>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDarkDropdownMenuLink\">\r\n                <li>\r\n                  <button\r\n                    className=\"dropdown-item\"\r\n                    data-bs-toggle=\"popover\"\r\n                    title=\"Popover title\"\r\n                    onClick={handleUpClick}\r\n                    disabled={textValue.length === 0}\r\n                  >\r\n                    Uppercase\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    className=\"dropdown-item\"\r\n                    onClick={handleLowClick}\r\n                    disabled={textValue.length === 0}\r\n                  >\r\n                    Lowercase\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    className=\"dropdown-item\"\r\n                    data-bs-toggle=\"popover\"\r\n                    title=\"Popover title\"\r\n                    onClick={handleCapitalClick}\r\n                    disabled={textValue.length === 0}\r\n                  >\r\n                    Capitalize\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"input-group m-2 d-flex\" style={{width: 'auto'}}>\r\n              {/* {<input type=\"number\" max={72} min={8} value={textStyles.fontSize} onChange={handleFontSizeChange} \r\n              className=\"form-control\" aria-label=\"Text input with dropdown button\" \r\n              disabled={textValue.length === 0}\r\n              style={{maxWidth: '50px'}}/>} */}\r\n              <button className=\"btn btn-light btn-sm dropdown-toggle d-flex justify-content-between align-items-center\" \r\n              type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" disabled={textValue.length === 0}>\r\n                <span className=\"material-symbols-outlined\">text_increase/text_decrease</span>\r\n              </button>\r\n              <ul className=\"dropdown-menu dropdown-menu-end\" style={{height: '200px', overflow: 'auto'}}>\r\n              <li className=\"dropdown-item active\" disabled>{fontSizeINputVal === true ? fontSizeINputVal : textStyles.fontSize}</li>\r\n              <li><hr className=\"dropdown-divider\"/></li>\r\n                {fontSizesArr.map((size, id) => { \r\n                  return <div className=\"d-flex justify-content-between align-items-center\" key={id}>\r\n                    <li className=\"dropdown-item\" onClick={handleFontSize}>{size === 16 ? `${size} (Default)` : size}</li>\r\n                    <div className='icon' style={{color: 'Highlight'}}>\r\n                      {textStyles.fontSize === size ? '✔' : ''}\r\n                    </div>\r\n                  </div> \r\n                })}\r\n              </ul>\r\n            </div>\r\n            <button\r\n              className={`btn btn-light btn-sm d-flex m-2`}\r\n              onClick={handleBold}\r\n              disabled={textValue.length === 0}\r\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n              data-bs-custom-classname=\"custom-tooltip\"\r\n              title=\"Bold text.\"\r\n            >\r\n              <span className=\"material-symbols-outlined\">format_bold</span>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-light btn-sm d-flex m-2\"\r\n              onClick={handleItalic}\r\n              disabled={textValue.length === 0}\r\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n              data-bs-custom-classname=\"custom-tooltip\"\r\n              title=\"Italic text.\"\r\n            >\r\n              <span className=\"material-symbols-outlined\">format_italic</span>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-light btn-sm d-flex m-2\"\r\n              onClick={() => {handleTextAlign('left')}}\r\n              disabled={textValue.length === 0}\r\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n              data-bs-custom-classname=\"custom-tooltip\"\r\n              title=\"Align text left.\"\r\n            >\r\n              <span className=\"material-symbols-outlined\">format_align_left</span>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-light btn-sm d-flex m-2\"\r\n              onClick={() => {handleTextAlign('right')}}\r\n              disabled={textValue.length === 0}\r\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n              data-bs-custom-classname=\"custom-tooltip\"\r\n              title=\"Align text right.\"\r\n            >\r\n              <span className=\"material-symbols-outlined\">format_align_right</span>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-light btn-sm d-flex m-2\"\r\n              onClick={() => {handleTextAlign('center')}}\r\n              disabled={textValue.length === 0}\r\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n              data-bs-custom-classname=\"custom-tooltip\"\r\n              title=\"Align text center.\"\r\n            >\r\n              <span className=\"material-symbols-outlined\">format_align_center</span>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-light btn-sm d-flex m-2\"\r\n              onClick={() => {handleTextAlign('justify')}}\r\n              disabled={textValue.length === 0}\r\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n              data-bs-custom-classname=\"custom-tooltip\"\r\n              title=\"Align text justify.\"\r\n            >\r\n              <span className=\"material-symbols-outlined\">format_align_justify</span>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-light btn-sm d-flex m-2\"\r\n              onClick={handlePreview}\r\n              disabled={textValue.length === 0}\r\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n              data-bs-custom-classname=\"custom-tooltip\"\r\n              title=\"Preview\"\r\n            >\r\n              <span className=\"material-symbols-outlined\">preview</span>\r\n            </button>\r\n            <button\r\n              className={`d-flex btn btn-${copyBtn.btnColor} btn-sm m-2`}\r\n              disabled={textValue.length === 0}\r\n              onClick={copyText}\r\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n              data-bs-custom-classname=\"custom-tooltip\"\r\n              title=\"Copy written text.\"\r\n            >\r\n              <span className=\"material-symbols-outlined\">content_copy</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myTextArea\"\r\n            rows=\"10\"\r\n            value={textValue}\r\n            onChange={handleOnChangeTextArea}\r\n            style={textStyles}\r\n          />\r\n        </div>\r\n        <div className=\"container my-2 d-flex justify-content-between align-items-center\">\r\n            <p>\r\n              {textValue.split(/\\s+/).filter((e) => e).length} words and{\" \"}\r\n              {textValue.length} chars\r\n            </p>\r\n            <button type=\"button\" disabled={textValue.length === 0} onClick={handleclearTextModal} \r\n            className=\"btn btn-outline-danger btn-sm d-flex justify-content-between align-items-center\">\r\n              <span className=\"material-symbols-outlined\">clear_all</span>\r\n            </button>\r\n        </div>\r\n      </div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Textform;\r\n","import React from 'react';\nimport About from './components/About';\n// import Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = React.useState(false)\n  // const [alert, setAlert] = React.useState(null)\n  const currentTheme = localStorage.getItem(\"theme\");\n\n  if (currentTheme === \"dark\") {\n    document.body.classList.add(\"dark-theme\");\n  }\n  \n  // function showAlert(msg, type) {\n  //   setAlert({message: msg, alertType: type})\n  //   setTimeout(() => {\n  //     setAlert(null)\n  //   }, 2500);\n  // }\n\n  function handleMode() {\n      setMode((oldState) => {\n        return !oldState\n      });\n      document.body.classList.toggle(\"dark-theme\");\n      let theme = \"light\"\n      if (document.body.classList.contains(\"dark-theme\")) {\n        theme = \"dark\";\n      } \n      localStorage.setItem(\"theme\", theme);\n  }\n\n  return (\n      <div className=\"App\">\n        <Navbar title='TypeWriter' modeClick={handleMode} theme={currentTheme}/>\n        <div className='container'>\n        <Textform heading='Type Anything' theme={currentTheme}/>\n          {/* <Routes> */}\n            {/* <Route path=\"/textform\"  */}\n              {/* element={<Textform heading='Type Anything' theme={currentTheme}/>}></Route> */}\n            {/* <Route exact path=\"/about\" element={<About theme={currentTheme}/>}></Route> */}\n          {/* </Routes> */}\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    {/* <BrowserRouter> */}\n     <App />\n    {/* </BrowserRouter> */}\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}